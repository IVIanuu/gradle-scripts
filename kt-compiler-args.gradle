afterEvaluate {
    tasks
            .matching {
                it.class.canonicalName == 'org.jetbrains.kotlin.gradle.tasks.KotlinCompile' ||
                        it.class.superclass.canonicalName == 'org.jetbrains.kotlin.gradle.tasks.KotlinCompile'
            }
            .forEach {
                it.kotlinOptions.freeCompilerArgs += [
                        "-Xjsr305=strict",
                        "-progressive",
                        "-XXLanguage:+SamConversionForKotlinFunctions",
                        "-XXLanguage:+InlineClasses",
                        //"-XXLanguage:+NewInference",
                        "-Xuse-experimental=kotlin.Experimental",
                        "-Xuse-experimental=kotlin.ExperimentalStdlibApi",
                        "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                        "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference",
                        "-Xuse-experimental=kotlin.contracts.ExperimentalContracts",
                        "-Xuse-experimental=kotlin.time.ExperimentalTime",
                        "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                        "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
                        "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi",
                        "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                        "-Xuse-experimental=kotlinx.serialization.UnstableDefault",
                        "-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer"
                        ]
            }
}
